name: Python package

on: 
  push:
  pull_request:
    types: [ opened, synchronize, reopened, edited ]

jobs:
  build:
    if: github.repository_owner == 'telegraphic' 
    name: ${{ matrix.os}} ${{ matrix.architecture }}, Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        architecture: [x86, x64]
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8] #, 3.9] still disabled as astropy has problems
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
          # disabled for now as python 3.9 not yet in matrix
          #- python-version: [3.9] # exclude python >= 3.9 cause no h5py win32 wheels
          #  - os: windows-latest
          #    architecture: x86
      fail-fast: false

    steps:
     - uses: actions/checkout@v2
     - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
       uses: actions/setup-python@v2
       with:
         python-version: ${{ matrix.python-version }}
         architecture: ${{ matrix.architecture }}
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip setuptools wheel virtualenv
         python -m pip install tox tox-gh-actions
     - name: Install test requirements
        if: ${{ matrix.architecture  != 'x86' }}
        run: |
          python -m pip install -r requirements_test.txt
     - name: install test windows 32 bit requirements
        if: ${{ matrix.architecture  == 'x86' }}
        run: |
          python -m pip install -r requirements32_test.txt
     - name: Test deployment
       run: |
         check-manifest
         python setup.py sdist bdist_wheel
         twine check dist/*
     - name: Test package
       run: |
         tox
       env:
         TOX_H5PY_REQIREMENTS: ${{ matrix.architecture == 'x86' && '32' || ''}}
         PLATFORM: ${{ matrix.platform }}
     - name: Upload coverage
       if: ${{ success() &&  github.repository == 'telegraphic/hickle' }}
       uses: codecov/codecov-action@v2
       with:
           token: ${{ secrets.CODECOV_TOKEN }}
           files: coverage.xml
           fail_ci_if_error: true
           verbose: true
     - name: Deploy package
       if: ${{ success() && matrix.os == 'ubuntu-latest' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
       env:
         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
       run: |
         twine upload --skip-existing dist/*

